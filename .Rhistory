for (i in x) {
if (is.na(x[i])==T){
ret = rbind(ret, i)
}
}
return(ret)
}
my_fn(my_vector)
my_vector <- c(1, 2, 3, NA, NA)
my_fn <- function(x){
ret =list()
num = 1
for (i in x) {
if (is.na(x[i])==T){
ret = rbind(ret, num)
num <- num + 1
}
}
return(ret)
}
my_fn(my_vector)
my_vector <- c(1, 2, 3, NA, NA)
my_fn <- function(x){
ret =list()
num = 1
for (i in x) {
if (is.na(x[i])==T){
ret = rbind(ret, num)
}
num <- num + 1
}
return(ret)
}
my_fn(my_vector)
my_vector <- c(1, 2, 3, NA, NA)
my_fn <- function(x){
ret = []
num = 1
for (i in x) {
if (is.na(x[i])==T){
ret = c(ret), num)
}
num <- num + 1
}
return(ret)
}
my_vector <- c(1, 2, 3, NA, NA)
my_fn <- function(x){
ret = c()
num = 1
for (i in x) {
if (is.na(x[i])==T){
ret = c(ret, num)
}
num <- num + 1
}
return(ret)
}
my_fn(my_vector)
my_vector <- c(14, NA, 7, NA, 11, 9, 12, 11, 17, 10, 11, 7, 6)
my_fn <- function(x){
ret = c()
num = 1
for (i in x) {
if (is.na(x[i])==T){
ret = c(ret, num)
}
num <- num + 1
}
return(ret)
}
my_fn(my_vector)
my_vector <- c(14, NA, 7, NA, 11, 9, 12, 11, 17, 10, 11, 7, 6)
my_fn <- function(x){
ret = c()
num = 1
for (i in x) {
if (is.na(i)==T){
ret = c(ret, num)
}
num <- num + 1
}
r
my_fn(my_vector)
my_fn(my_vector)
my_vector <- c(14, NA, 7, NA, 11, 9, 12, 11, 17, 10, 11, 7, 6)
is.na(my_vector)
is.na(my_vector)
t <- is.na(my_vector)
t
my_vector <- c(14, NA, 7, NA, 11, 9, 12, 11, 17, 10, 11, 7, 6)
my_vector
3+2
3+2
my_vector <- c(14, NA, 7, NA, 11, 9, 12, 11, 17, 10, 11, 7, 6)
my_vector
t <- is.na(my_vector)
t
my_fn <- function(x){
ret = c()
num = 1
for (i in x) {
if (is.na(i)==T){
ret = c(ret, num)
}
num <- num + 1
}
return(ret)
}
my_fn(my_vector)
my_fn2 <- function(x){
num = 0
for (i in x) {
if (is.na(i)==T){
num <- num + 1
}
}
return(num)
}
my_fn2(my_vector)
filtered.sum <- function(x){
num = 0
for (i in x) {
if (is.na(i)==F & i>0){
num <- num + i
}
}
return(num)
}
filtered.sum(c(1, -2, 3, NA, NA))
x <- rnorm(100)
quantile(x, probs = c(0.25, 0.75))
t <- quantile(x, probs = c(0.25, 0.75))
t
str(t)
i <- IQR(x)
i
x <- rnorm(100)
x
del_v <- function(x){
t <- quantile(x, probs = c(0.25, 0.75))
q <- IQR(x)
ret = c()
for (i in x) {
if (is.na(i)==F){
if ((i > t[2] + 1.5*q || i < t[1] - 1.5*q )){
}
else{ret = c(ret, i)}
}
}
return(ret)
}
del_v(x)
df  <- mtcars
cor.test(x = df$mpg, y = df$hp)
fit  <- cor.test(x = df$mpg, y = df$hp)
cor.test(~ mpg + hp, df)
str(fit)
fit$p.value
plot(x = df$mpg, y = df$hp)
df  <- mtcars
df_numeric  <- df[, c(1,3:7)]
pairs(df_numeric)
df  <- mtcars
df_numeric  <- df[, c(1,3:7)]
pairs(df_numeric)
cor(df_numeric)
fit  <- corr.test(df_numeric)
library(psych)
fit  <- corr.test(df_numeric)
fit$r
fit$p
fit$adjust
df  <- mtcars
df_numeric  <- df[, c(1,5)]
fit  <- corr.test(df_numeric)
fit$r
fit$r[1,1]
fit$r[1,2]
fit$p[1,2]
fit
corr.calc <- function(x){
library(psych)
fit  <- corr.test(x)
res = c(fit$r[1,2])
res = c(res, fit$p[1,2])
return(res)
}
corr.calc( mtcars[, c(1,5)] )
fit$p.value
fit  <- corr.test(df_numeric)
fit$p.value
df  <- mtcars
df_numeric  <- df[, c(1,5)]
fit  <- corr.test(df_numeric)
fit$p.value
fit  <- corr.test(df_numeric)
fit
fit$r
x <- mtcars
lst <- which(is.numeric(x))
lst
str(x)
typeof(x$mpg)
sapply(x, class)
lst <- which(tp =="numeric")
tp <- sapply(x, class)
lst <- which(tp =="numeric")
lst
str(x)
df_numeric  <- x[, lst]
fit  <- corr.test(df_numeric)
fit
fit$r
M <- apply(fit$r, 1, max)
M
pairs(df_numeric)
cor(df_numeric)
M <- apply(fit$r[fit$r!=1], 1, max)
M <- apply(fit$r[, fit$r==1], 1, max)
fit$r[, fit$r==1]
fit$r==1
z <- fit$r==1
fit$r[z]
z <- fit$r!=1
fit$r[z]
fit$r[fit$r!=1]
M <- apply(fit$r[fit$r!=1], 1, max)
z <- fit$r[fit$r!=1]
z
max(abs(z))
filtered.cor <- function(x){
tp <- sapply(x, class)
lst <- which(tp =="numeric")
df_numeric  <- x[, lst]
fit  <- corr.test(df_numeric)
z <- fit$r[fit$r!=1]
res <- max(abs(z))
return(res)
}
filtered.cor(iris)
iris$Petal.Length <- -iris$Petal.Length # сделаем отрицательной максимальную по модулю корреляцию
filtered.cor(iris)
filtered.cor <- function(x){
tp <- sapply(x, class)
lst <- which(tp =="numeric")
df_numeric  <- x[, lst]
fit  <- corr.test(df_numeric)
z <- fit$r[fit$r!=1]
res1 <- max(z)
res2 <- min(z)
if (abs(res1)>=abs(res2)){
res = res1}
else {res = res2}
return(res)
}
filtered.cor(iris)
iris$Petal.Length <- -iris$Petal.Length
filtered.cor(iris)
iris$Petal.Length <- -iris$Petal.Length
filtered.cor(iris)
M <- apply(fit$r, 1, max)
M
step6 <-  read.table("step6.csv",  header=TRUE, sep=',' )
filtered.cor(step6)
x <- step6
str(x)
tp <- sapply(x, class)
lst <- which(tp =="numeric")
lst
df_numeric  <- x[, lst]
str(df_numeric)
fit  <- corr.test(df_numeric)
fit$r
apply(fit$r, 1, max)
apply(fit$r, -C(nrow(fit$r)), max)
apply(fit$r, -c(nrow(fit$r)), max)
apply(fit$r, -nrow(fit$r), max)
apply(fit$r, nrow(fit$r), max)
fit$r
fit$r[1,1]
fit$r[,]!=fit$r[nrow, ncol()]
mat <- fit$r
mat <- fit$r
for (i in nrow(mat)){
for(j in ncol(mat)){
if(i!=j){
ls <- mat[i,j]
}
}
}
max(ls)
mat <- fit$r
ls=c()
for (i in nrow(mat)){
for(j in ncol(mat)){
if(i!=j){
ls <- c(ls, mat[i,j])
}
}
}
max(ls)
mat <- fit$r
ls=c(0)
for (i in nrow(mat)){
for(j in ncol(mat)){
if(i!=j){
ls <- c(ls, mat[i,j])
}
}
}
max(ls)
mat
mat <- fit$r
mat
ls=c(0)
for (i in nrow(mat)){
for(j in ncol(mat)){
if(i!=j){
ls <- c(ls, mat[i,j])
mat[i,j]
}
}
}
max(ls)
mat <- fit$r
mat
ls=c(0)
for (i in 1:nrow(mat)){
for(j in 1:ncol(mat)){
if(i!=j){
ls <- c(ls, mat[i,j])
}
}
}
max(ls)
filtered.cor <- function(x){
library(psych)
tp <- sapply(x, class)
lst <- which(tp =="numeric")
df_numeric  <- x[, lst]
fit  <- corr.test(df_numeric)
mat <- fit$r
ls=c(0)
for (i in 1:nrow(mat)){
for(j in 1:ncol(mat)){
if(i!=j){
ls <- c(ls, mat[i,j])
}
}
}
max(ls)
res1 <- max(ls)
res2 <- min(ls)
if (abs(res1)>=abs(res2)){
res = res1}
else {res = res2}
return(res)
}
filtered.cor(iris)
iris$Petal.Length <- -iris$Petal.Length
filtered.cor(iris)
iris$Petal.Length <- -iris$Petal.Length
filtered.cor(iris)
obj <- ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = position_dodge(0.2))
obj
library(ggplot2)
obj <- ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = position_dodge(0.2))
obj
install.packages("Hmisc")
install.packages("Hmisc")
library(Hmisc)
library(ggplot2)
obj <- ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = position_dodge(0.2))
obj
pd = position_dodge(0.1)
ggplot(mydata, aes(x = store, y = price, color = origin, group = origin)) +
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.2, lwd = 0.8, position = pd)+
stat_summary(fun.data = mean_cl_boot, geom = 'line', size = 1.5, position = pd) +
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 5, position = pd, pch=15) +
theme_bw()
mydata <- read.csv('shops.csv')
ggplot(mydata, aes(x = store, y = price, color = origin, group = origin)) +
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.2, lwd = 0.8, position = pd)+
stat_summary(fun.data = mean_cl_boot, geom = 'line', size = 1.5, position = pd) +
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 5, position = pd, pch=15) +
theme_bw()
library("Hmisc", lib.loc="~/R/win-library/3.2")
library("ggplot2", lib.loc="C:/Program Files/R/R-3.2.2/library")
pd = position_dodge(0.1)
ggplot(mydata, aes(x = store, y = price, color = origin, group = origin)) +
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.2, lwd = 0.8, position = pd)+
stat_summary(fun.data = mean_cl_boot, geom = 'line', size = 1.5, position = pd) +
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 5, position = pd, pch=15) +
theme_bw()
ggplot(df, aes(df$Sepal.Width, df$Petal.Width, col = factor(df$Species)))+
geom_point(size = 5)+
geom_smooth(method = "lm")
my_plot <- ggplot(df, aes(df$Sepal.Width, df$Petal.Width, col = factor(df$Species)))+
geom_point(size = 5)+
geom_smooth(method = "lm")
my_plot
my_plot <- ggplot()
df <- iris
my_plot <- ggplot(df, aes(df$Sepal.Width, df$Petal.Width, col = factor(df$Species)))+
geom_point(size = 5)+
geom_smooth(method = "lm")
my_plot
obj <- ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))
obj
obj <- ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
obj
obj
library(ggplot2)
library(Hmisc)
obj <- ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = position_dodge(0.2))
install.packages("Hmisc")
install.packages("Hmisc")
str(ToothGrowth)
View(ToothGrowth)
library(ggplot2)
library(Hmisc)
obj <- ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = position_dodge(0.2))
obj
mydata <- read.csv('shops.csv')
pd = position_dodge(0.1)
ggplot(mydata, aes(x = store, y = price, color = origin, group = origin)) +
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.2, lwd = 0.8, position = pd)+
stat_summary(fun.data = mean_cl_boot, geom = 'line', size = 1.5, position = pd) +
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 5, position = pd, pch=15) +
theme_bw()
obj <- ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = position_dodge(0.2))
theme_bw()
obj
ggplot(mydata, aes(x = store, y = price, color = origin, group = origin)) +
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.2, lwd = 0.8, position = pd)+
stat_summary(fun.data = mean_cl_boot, geom = 'line', size = 1.5, position = pd) +
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 5, position = pd, pch=15) +
theme_bw()
ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = position_dodge(0.2))
theme_bw()
ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = position_dodge(0.2))
theme_bw()
ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', position = position_dodge(0.2))
ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', position = position_dodge(0.2), pch=15)
theme_bw()
ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 5, position = position_dodge(0.2), pch=15)
ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, lwd = 0.8, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', position = position_dodge(0.2), pch=15)
pd = position_dodge(0.1)
ggplot(mydata, aes(x = store, y = price, color = origin, group = origin)) +
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.2, lwd = 0.8, position = pd)+
stat_summary(fun.data = mean_cl_boot, geom = 'line', size = 1.5, position = pd) +
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 5, position = pd, pch=15) +
theme_bw()
ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp, group = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, lwd = 0.8, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', position = position_dodge(0.2), pch=15)
model_full <- lm(rating ~ ., data = attitude)
model_null <- lm(rating ~ 1, data = attitude)
scope = list(lower = model_null, upper = model_full)
model_null
model_full
str(attitude)
&step
?step
ideal_model <- step(model_full, scope, direction = 'backward')
ideal_model
anova(model_ful, ideal_model)
anova(model_full, ideal_model)
str(LifeCycleSavings)
View(LifeCycleSavings)
?LifeCycleSavings
model <- lm(sr ~(pop15+pop75+dpi+ddpi)^2, LifeCycleSavings)
model
